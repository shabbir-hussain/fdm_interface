%% File : ARINC825HeaderDirectedMessage.tlc
%% Created: Thu Nov  3 21:54:42 2016
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "ARINC825HeaderDirectedMessage.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  ARINC825HeaderDirectedMessage "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs
    
  extern void ARINC825HeaderDirectedMessage_Outputs_wrapper(const uint32_T *LCC,
			const uint32_T *SourceAddress,
			const uint32_T *DestinationAddress,
			const uint32_T *SourcePortID,
			const uint32_T *DestinationPortID,
			uint32_T *Header);
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign pu4 = LibBlockInputSignalAddr(4, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  ARINC825HeaderDirectedMessage_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<pu4>, %<py0> );
  %%
%endfunction


%% [EOF] ARINC825HeaderDirectedMessage.tlc





