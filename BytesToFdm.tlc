%% File : BytesToFdm.tlc
%% Created: Tue Nov  1 16:48:33 2016
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "BytesToFdm.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  BytesToFdm "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs
    
  extern void BytesToFdm_Outputs_wrapper(const uint8_T *Input,
			uint32_T *Version,
			uint32_T *padding,
			real_T *longitude,
			real_T *latitude,
			real_T *altitude,
			real32_T *agl,
			real32_T *phi,
			real32_T *theta,
			real32_T *psi,
			real32_T *alpha,
			real32_T *beta,
			real32_T *phidot,
			real32_T *thetadot,
			real32_T *psidot,
			real32_T *vcas,
			real32_T *climb_rate,
			real32_T *v_north,
			real32_T *v_east,
			real32_T *v_down,
			real32_T *v_body_u,
			real32_T *v_body_v,
			real32_T *v_body_w,
			real32_T *A_X_pilot,
			real32_T *A_Y_pilot,
			real32_T *A_Z_pilot,
			real32_T *stall_warning,
			real32_T *slip_deg,
			uint32_T *num_engines,
			uint32_T *eng_state,
			real32_T *rpm,
			real32_T *fuel_flow,
			real32_T *fuel_px,
			real32_T *egt,
			real32_T *cht,
			real32_T *mp_osi,
			real32_T *tit,
			real32_T *oil_temp,
			real32_T *oil_px,
			uint32_T *num_tanks,
			real32_T *fuel_quantity,
			uint32_T *num_wheels,
			uint32_T *wow,
			real32_T *gear_pos,
			real32_T *gear_steer,
			real32_T *gear_compression,
			uint32_T *cur_time,
			uint32_T *warp,
			real32_T *visibility,
			real32_T *elevator,
			real32_T *elevator_trim_tab,
			real32_T *left_flap,
			real32_T *right_flap,
			real32_T *left_aileron,
			real32_T *right_aileron,
			real32_T *rudder,
			real32_T *nose_wheel,
			real32_T *speedbrake,
			real32_T *spoilers);
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  %assign py4 = LibBlockOutputSignalAddr(4, "", "", 0)
  %assign py5 = LibBlockOutputSignalAddr(5, "", "", 0)
  %assign py6 = LibBlockOutputSignalAddr(6, "", "", 0)
  %assign py7 = LibBlockOutputSignalAddr(7, "", "", 0)
  %assign py8 = LibBlockOutputSignalAddr(8, "", "", 0)
  %assign py9 = LibBlockOutputSignalAddr(9, "", "", 0)
  %assign py10 = LibBlockOutputSignalAddr(10, "", "", 0)
  %assign py11 = LibBlockOutputSignalAddr(11, "", "", 0)
  %assign py12 = LibBlockOutputSignalAddr(12, "", "", 0)
  %assign py13 = LibBlockOutputSignalAddr(13, "", "", 0)
  %assign py14 = LibBlockOutputSignalAddr(14, "", "", 0)
  %assign py15 = LibBlockOutputSignalAddr(15, "", "", 0)
  %assign py16 = LibBlockOutputSignalAddr(16, "", "", 0)
  %assign py17 = LibBlockOutputSignalAddr(17, "", "", 0)
  %assign py18 = LibBlockOutputSignalAddr(18, "", "", 0)
  %assign py19 = LibBlockOutputSignalAddr(19, "", "", 0)
  %assign py20 = LibBlockOutputSignalAddr(20, "", "", 0)
  %assign py21 = LibBlockOutputSignalAddr(21, "", "", 0)
  %assign py22 = LibBlockOutputSignalAddr(22, "", "", 0)
  %assign py23 = LibBlockOutputSignalAddr(23, "", "", 0)
  %assign py24 = LibBlockOutputSignalAddr(24, "", "", 0)
  %assign py25 = LibBlockOutputSignalAddr(25, "", "", 0)
  %assign py26 = LibBlockOutputSignalAddr(26, "", "", 0)
  %assign py27 = LibBlockOutputSignalAddr(27, "", "", 0)
  %assign py28 = LibBlockOutputSignalAddr(28, "", "", 0)
  %assign py29 = LibBlockOutputSignalAddr(29, "", "", 0)
  %assign py30 = LibBlockOutputSignalAddr(30, "", "", 0)
  %assign py31 = LibBlockOutputSignalAddr(31, "", "", 0)
  %assign py32 = LibBlockOutputSignalAddr(32, "", "", 0)
  %assign py33 = LibBlockOutputSignalAddr(33, "", "", 0)
  %assign py34 = LibBlockOutputSignalAddr(34, "", "", 0)
  %assign py35 = LibBlockOutputSignalAddr(35, "", "", 0)
  %assign py36 = LibBlockOutputSignalAddr(36, "", "", 0)
  %assign py37 = LibBlockOutputSignalAddr(37, "", "", 0)
  %assign py38 = LibBlockOutputSignalAddr(38, "", "", 0)
  %assign py39 = LibBlockOutputSignalAddr(39, "", "", 0)
  %assign py40 = LibBlockOutputSignalAddr(40, "", "", 0)
  %assign py41 = LibBlockOutputSignalAddr(41, "", "", 0)
  %assign py42 = LibBlockOutputSignalAddr(42, "", "", 0)
  %assign py43 = LibBlockOutputSignalAddr(43, "", "", 0)
  %assign py44 = LibBlockOutputSignalAddr(44, "", "", 0)
  %assign py45 = LibBlockOutputSignalAddr(45, "", "", 0)
  %assign py46 = LibBlockOutputSignalAddr(46, "", "", 0)
  %assign py47 = LibBlockOutputSignalAddr(47, "", "", 0)
  %assign py48 = LibBlockOutputSignalAddr(48, "", "", 0)
  %assign py49 = LibBlockOutputSignalAddr(49, "", "", 0)
  %assign py50 = LibBlockOutputSignalAddr(50, "", "", 0)
  %assign py51 = LibBlockOutputSignalAddr(51, "", "", 0)
  %assign py52 = LibBlockOutputSignalAddr(52, "", "", 0)
  %assign py53 = LibBlockOutputSignalAddr(53, "", "", 0)
  %assign py54 = LibBlockOutputSignalAddr(54, "", "", 0)
  %assign py55 = LibBlockOutputSignalAddr(55, "", "", 0)
  %assign py56 = LibBlockOutputSignalAddr(56, "", "", 0)
  %assign py57 = LibBlockOutputSignalAddr(57, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  BytesToFdm_Outputs_wrapper(%<pu0>, %<py0>, %<py1>, %<py2>, %<py3>, %<py4>, %<py5>, %<py6>, %<py7>, %<py8>, %<py9>, %<py10>, %<py11>, %<py12>, %<py13>, %<py14>, %<py15>, %<py16>, %<py17>, %<py18>, %<py19>, %<py20>, %<py21>, %<py22>, %<py23>, %<py24>, %<py25>, %<py26>, %<py27>, %<py28>, %<py29>, %<py30>, %<py31>, %<py32>, %<py33>, %<py34>, %<py35>, %<py36>, %<py37>, %<py38>, %<py39>, %<py40>, %<py41>, %<py42>, %<py43>, %<py44>, %<py45>, %<py46>, %<py47>, %<py48>, %<py49>, %<py50>, %<py51>, %<py52>, %<py53>, %<py54>, %<py55>, %<py56>, %<py57> );
  %%
%endfunction


%% [EOF] BytesToFdm.tlc





